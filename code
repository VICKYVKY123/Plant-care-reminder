import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

void main() {
  runApp(MyApp());
}

class Plant {
  final String name;
  final String species;
  final String location;
  final String careInstructions;

  Plant({
    required this.name,
    required this.species,
    required this.location,
    required this.careInstructions,
  });
}

class PlantCareNotifier extends ChangeNotifier {
  List<Plant> _plants = [];

  List<Plant> get plants => _plants;

  void addPlant(Plant plant) {
    _plants.add(plant);
    notifyListeners();
  }
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MultiProvider(
      providers: [
        ChangeNotifierProvider(
          create: (_) => PlantCareNotifier(),
        ),
      ],
      child: MaterialApp(
        title: 'Plant Care Reminder',
        debugShowCheckedModeBanner: false,
        theme: ThemeData(
          primaryColor: Colors.green,
          scaffoldBackgroundColor: Colors.white,
          appBarTheme: AppBarTheme(
            color: Colors.green,
          ),
          floatingActionButtonTheme: FloatingActionButtonThemeData(
            backgroundColor: Colors.green,
          ),
        ),
        home: PlantCareHomePage(),
      ),
    );
  }
}

class PlantCareHomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Plant Care Reminder'),
        actions: [
          IconButton(
            icon: Icon(Icons.search),
            onPressed: () {
              // Implement your search functionality here
            },
          ),
        ],
      ),
      body: PlantList(),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          Navigator.push(
            context,
            MaterialPageRoute(builder: (context) => AddPlantPage()),
          );
        },
        child: Icon(Icons.add),
      ),
    );
  }
}

class PlantList extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Consumer<PlantCareNotifier>(
      builder: (context, plantCareNotifier, _) => ListView.builder(
        itemCount: plantCareNotifier.plants.length,
        itemBuilder: (context, index) {
          final plant = plantCareNotifier.plants[index];
          return Card(
            elevation: 2.0,
            margin: EdgeInsets.symmetric(vertical: 8.0, horizontal: 16.0),
            child: ListTile(
              title: Text(
                plant.name,
                style: TextStyle(
                  fontWeight: FontWeight.bold,
                ),
              ),
              subtitle: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  SizedBox(height: 4.0),
                  Text(
                    'Species: ${plant.species}',
                    style: TextStyle(
                      fontStyle: FontStyle.italic,
                    ),
                  ),
                  SizedBox(height: 4.0),
                  Text(
                    'Location: ${plant.location}',
                    style: TextStyle(
                      fontStyle: FontStyle.italic,
                    ),
                  ),
                ],
              ),
              onTap: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => PlantDetailPage(plant: plant),
                  ),
                );
              },
            ),
          );
        },
      ),
    );
  }
}

class AddPlantPage extends StatelessWidget {
  final TextEditingController _nameController = TextEditingController();
  final TextEditingController _speciesController = TextEditingController();
  final TextEditingController _locationController = TextEditingController();
  final TextEditingController _careInstructionsController =
      TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Add Plant'),
      ),
      body: Padding(
        padding: EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            TextFormField(
              controller: _nameController,
              decoration: InputDecoration(
                labelText: 'Name',
              ),
            ),
            SizedBox(height: 8.0),
            TextFormField(
              controller: _speciesController,
              decoration: InputDecoration(
                labelText: 'Species',
              ),
            ),
            SizedBox(height: 8.0),
            TextFormField(
              controller: _locationController,
              decoration: InputDecoration(
                labelText: 'Location',
              ),
            ),
            SizedBox(height: 8.0),
            TextFormField(
              controller: _careInstructionsController,
              decoration: InputDecoration(
                labelText: 'Care Instructions',
              ),
            ),
            SizedBox(height: 16.0),
            ElevatedButton(
              onPressed: () {
                final plant = Plant(
                  name: _nameController.text,
                  species: _speciesController.text,
                  location: _locationController.text,
                  careInstructions: _careInstructionsController.text,
                );
                Provider.of<PlantCareNotifier>(context, listen: false)
                    .addPlant(plant);
                Navigator.pop(context);
              },
              child: Text('Add Plant'),
            ),
          ],
        ),
      ),
    );
  }
}

class PlantDetailPage extends StatelessWidget {
  final Plant plant;

  PlantDetailPage({required this.plant});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(plant.name),
      ),
      body: Padding(
        padding: EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Species: ${plant.species}',
              style: TextStyle(
                fontWeight: FontWeight.bold,
              ),
            ),
            SizedBox(height: 8.0),
            Text(
              'Location: ${plant.location}',
              style: TextStyle(
                fontStyle: FontStyle.italic,
              ),
            ),
            SizedBox(height: 8.0),
            Text(
              'Care Instructions: ${plant.careInstructions}',
              style: TextStyle(
                fontStyle: FontStyle.italic,
              ),
            ),
          ],
        ),
      ),
    );
  }
}
